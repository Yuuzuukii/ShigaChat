## compose version key is obsolete in v2; removed to avoid warnings

services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ShigaChat
      MYSQL_USER: shigachat
      MYSQL_PASSWORD: shigachatpass
      TZ: "Asia/Tokyo"
    command: >
      mysqld
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
      - ./mysql/my.cnf:/etc/mysql/conf.d/custom.cnf
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 30s
      timeout: 10s
      retries: 5

  uvicorn:
    build: ./app
    volumes:
      - ./app:/var/www/
      - ./app/log:/var/log/uwsgi/
    ports:
      - "8000:8000"
    environment:
      TZ: "Asia/Tokyo"
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: ShigaChat
      MYSQL_USER: shigachat
      MYSQL_PASSWORD: shigachatpass
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Increase workers for better concurrency under blocking I/O
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 4

  scraper:
    build:
      context: .
      dockerfile: Dockerfile.scraper
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: ShigaChat
      MYSQL_USER: shigachat
      MYSQL_PASSWORD: shigachatpass
      TZ: "Asia/Tokyo"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    profiles:
      - scraper  # プロファイルを指定して手動実行のみ

  nginx:
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/log:/var/log/nginx
      - ./nginx/build:/usr/share/nginx/html  # Reactのビルドファイル
    ports:
      - "80:80"
    environment:
      TZ: "Asia/Tokyo"
    depends_on:
      - uvicorn
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
